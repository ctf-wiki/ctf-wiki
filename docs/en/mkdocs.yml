# Project Information

site_name: CTF Wiki

site_description: CTF Wiki

site_author: CTF Wiki Team

site_url: https://ctf-wiki.github.io/ctf-wiki/



# Repository

repo_name: 'ctf-wiki/ctf-wiki'

repo_url: 'https://github.com/ctf-wiki/ctf-wiki'

edit_uri: 'blob/master/docs/en/docs/'



# Copyright

copyright: 'Copyright &copy; 2016 - 2018 CTF Wiki Team'



# Contents

nav:
    - Introduction:
        - Getting Started: index.md 
        - CTF History: introduction/history.md
        - Introduction to CTF Competition Mode: introduction/mode.md
        - CTF Contest content: introduction/content.md
        - Offline attack and defense experience summary: introduction/experience.md
        - CGC Super Challenge: introduction/cgc.md
        - Learning resources: introduction/resources.md
  
    - Misc:

        - Miscellaneous introduction: misc/introduction.md
        - Information gathering technology: misc/recon.md
        - Code analysis:
            - Commonly used coding in the communication field: misc/encode/communication.md
            - Computer related code: misc/encode/computer.md
            - Commonly used encodings in the real world: misc/encode/modern.md
        - Forensic steganography: misc/prefix.md
        - Image analysis:
            - Introduction to image analysis: misc/picture/introduction.md
      - PNG: misc/picture/png.md

      - JPG: misc/picture/jpg.md

      - GIF: misc/picture/gif.md

- Traffic packet analysis:
- Introduction to traffic packet analysis: misc/traffic/introduction.md
- PCAP file repair: misc/traffic/fix.md
- Protocol analysis:
- Overview of protocol analysis: misc/traffic/protocols/README.md
        - Wireshark: misc/traffic/protocols/Wireshark.md

        - HTTP: misc/traffic/protocols/HTTP.md

        - HTTPS: misc/traffic/protocols/HTTPS.md

        - FTP: misc/traffic/protocols/FTP.md

        - DNS: misc/traffic/protocols/DNS.md

        - WIFI: misc/traffic/protocols/WIFI.md

        - USB: misc/traffic/protocols/USB.md

- Data extraction: misc/traffic/data.md
- Compressed package analysis:
- ZIP format: misc/archive/zip.md
- RAR format: misc/archive/rar.md
- Audio steganography: misc/audio/introduction.md
- Disk memory analysis:
- Introduction: misc/disk-memory/introduction.md
- Title: misc/disk-memory/problem.md
    - Other:

- pyc file: misc/other/pyc.md
  - Crypto:

- Introduction to cryptography: crypto/introduction.md
- Basic mathematics knowledge:
- Introduction: crypto/basic/introduction.md
- Classical password:
- Introduction to classical passwords: crypto/classical/introduction.md
- Single table substitution encryption: crypto/classical/monoalphabetic.md
- Multi-table substitution encryption: crypto/classical/polyalphabetic.md
- Other types of encryption: crypto/classical/others.md
- Summary: crypto/classical/summary.md
- Stream password:
- Introduction: crypto/streamcipher/intro.md
- Pseudo random number generator:
- Introduction: crypto/streamcipher/prng/intro.md
- Cryptographic security pseudo-random number generator: crypto/streamcipher/prng/csprng.md
        - 题目: crypto/streamcipher/prng/problem.md

- Linear Congruence Generator:
- Introduction: crypto/streamcipher/lcg/intro.md
- Example: crypto/streamcipher/lcg/challenge.md
- Feedback Shift Register:
- Introduction: crypto/streamcipher/fsr/intro.md
- Linear feedback shift register: crypto/streamcipher/fsr/lfsr.md
- Nonlinear feedback shift register: crypto/streamcipher/fsr/nfsr.md
- Special stream password:
        - RC4: crypto/streamcipher/special/rc4.md

- Block encryption:
- Introduction to block encryption: crypto/blockcipher/introduction.md
      - ARX: crypto/blockcipher/arx-operations.md

- DES: crypto / blockcipher / des.md
      - IDEA: crypto/blockcipher/idea.md

      - AES: crypto/blockcipher/aes.md

      - Simon and Speck: crypto/blockcipher/simon-speck.md

- Group mode:
- Introduction: crypto/blockcipher/mode/introduction.md
- Filling method: crypto/blockcipher/mode/padding.md
        - ECB: crypto/blockcipher/mode/ecb.md

        - CBC: crypto/blockcipher/mode/cbc.md

        - PCBC: crypto/blockcipher/mode/pcbc.md

        - CFB: crypto/blockcipher/mode/cfb.md

- OFB: crypto / blockcipher / mode / ofb.md
        - CTR: crypto/blockcipher/mode/ctr.md

        - Padding Oracle Attack: crypto/blockcipher/mode/padding-oracle-attack.md

- Asymmetric encryption:
- Introduction to asymmetric encryption: crypto/asymmetric/introduction.md
- RSA:
- RSA Basic introduction: crypto/asymmetric/rsa/rsa_theory.md
- Modulo-related attacks: crypto/asymmetric/rsa/rsa_module_attack.md
- Public key index related attacks: crypto/asymmetric/rsa/rsa_e_attack.md
- Private key d Related attacks: crypto/asymmetric/rsa/rsa_d_attack.md
- Coppersmith related attacks: crypto/asymmetric/rsa/rsa_coppersmith_attack.md
- Select a clear ciphertext attack: crypto/asymmetric/rsa/rsa_chosen_plain_cipher.md
- Side channel attack: crypto/asymmetric/rsa/rsa_side_channel.md
- Bleichenbacher attack: crypto/asymmetric/rsa/rsa_pkcs_attack.md
- Synthesis: crypto/asymmetric/rsa/rsa_complex.md
- Backpack encryption: crypto/asymmetric/knapsack/knapsack.md
- Discrete log correlation:
- Discrete logarithm: crypto/asymmetric/discrete-log/discrete-log.md
        - Elgamal: crypto/asymmetric/discrete-log/elgamal.md

        - ECC: crypto/asymmetric/discrete-log/ecc.md

- Password:
- Grid overview: crypto/asymmetric/lattice/overview.md
- Introduction to Grid: crypto/asymmetric/lattice/introduction.md
- Grid-based algorithm: crypto/asymmetric/lattice/lattice-reduction.md
- CVP: crypto / asymmetric / lattice / cvp.md
- Hash function:
- Introduction to the hash function: crypto/hash/introduction.md
      - MD5: crypto/hash/md5.md

      - SHA1: crypto/hash/sha1.md
      - FNV: crypto/hash/fnv.md

      - Hash Attack: crypto/hash/attack.md

- Synthesis: crypto/hash/complex.md
- digital signature:
- Introduction to digital signatures: crypto/signature/introduction.md
- RSA digital signature: crypto/signature/rsa.md
- ElGamal digital signature: crypto/signature/elgamal.md
- DSA digital signature: crypto/signature/dsa.md
- Summary of attack ideas:
- Introduction: crypto/attack-summary/attack-mode.md
- Intermediate encounter attack: crypto/attack-summary/meet-in-the-middle.md
- Bit attack: crypto/attack-summary/bit-attack.md
- Certificate format: crypto/certificate/introduction.md
  - Web:

- Introduction to Web Applications: web/introduction.md
- SQL injection: web/sqli.md
- XSS cross-site scripting attack: web/xss.md
- CSRF cross-site request forgery: web/csrf.md
- SSRF server request forgery: web/ssrf.md
- PHP code auditing: web/php/php.md
  - Assembly:

    - x86_x64: assembly/x86-x64/readme.md

    - mips: assembly/mips/readme.md

    - arm: assembly/arm/readme.md

  - Executable:

- ELF file:
- ELF file basic structure: executable/elf/elf-structure.md
- Program loading: executable/elf/program-loading.md
- Program link: executable/elf/program-linking.md
- Program execution flow: executable/elf/running-overview.md
  - Reverse:

    - Reverse Overview:

- Software Reverse Engineering Introduction: reverse/introduction.md
- Common encryption algorithms and code recognition: reverse/Identify-Encode-Encryption/introduction.md
- Labyrinth problem: reverse/maze/maze.md
- Virtual machine command analysis: reverse/vm/vm.md
      - Unicorn Engine 简介: reverse/unicorn/introduction.md

    - Linux Reverse:

- Linux Reverse Technology:
        - LD_PRELOAD: reverse/linux/ld_preload.md

        - False Disassembly: reverse/linux/false-disasm.md

        - Detecting Breakpoints: reverse/linux/detect-bp.md

        - Detecting debugging: reverse/linux/detect-dbg.md

    - Windows Reverse:

- Shelling technology:
- Introduction to the protective case: reverse/windows/unpack/packer-introduction.md
- Single step tracking method: reverse/windows/unpack/trace.md
- ESP law: reverse/windows/unpack/esp.md
- One step to the OEP method: reverse/windows/unpack/direct-oep.md
- Memory mirroring method: reverse/windows/unpack/memory.md
- Last exception method: reverse/windows/unpack/last-exception.md
- SFX method: reverse/windows/unpack/sfx.md
- DUMP and IAT reconstruction: reverse/windows/unpack/fix-iat.md
- Manually find the IAT and rebuild it using ImportREC: reverse/windows/unpack/manually-fix-iat.md
- DLL file unpacking: reverse/windows/unpack/unpack-dll.md
- Anti-debugging technology:
        - NtGlobalFlag: reverse/windows/anti-debug/ntglobalflag.md

        - Heap Flags: reverse/windows/anti-debug/heap-flags.md

        - The Heap: reverse/windows/anti-debug/the-heap.md

        - Interrupt 3: reverse/windows/anti-debug/int-3.md

        - IsDebuggerPresent: reverse/windows/anti-debug/isdebuggerpresent.md

        - CheckRemoteDebuggerPresent: reverse/windows/anti-debug/checkremotedebuggerpresent.md

        - NtQueryInformationProcess: reverse/windows/anti-debug/ntqueryinformationprocess.md

- Flower command: reverse/windows/anti-debug/junk-code.md
- Anti-debug technical example: reverse/windows/anti-debug/example.md
- Pwn:
    - Pwn Overview:

        - pwn/readme.md

- Linux Pwn:
- Security protection mechanism:
        - canary: pwn/linux/mitigation/canary.md

- Stack overflow:
- Stack introduction: pwn/linux/stackoverflow/stack-intro.md
- Stack overflow principle: pwn/linux/stackoverflow/stackoverflow-basic.md
        - 基本 ROP: pwn/linux/stackoverflow/basic-rop.md

- Intermediate ROP: pwn/linux/stackoverflow/medium-rop.md
- Advanced ROP: pwn/linux/stackoverflow/advanced-rop.md
- Fancy stack overflow: pwn/linux/stackoverflow/fancy-rop.md
- Format string vulnerability:
- Format string vulnerability principle: pwn/linux/fmtstr/fmtstr_intro.md
- Format string exploit: pwn/linux/fmtstr/fmtstr_exploit.md
- Format string vulnerability example: pwn/linux/fmtstr/fmtstr_example.md
- Format string vulnerability detection: pwn/linux/fmtstr/fmtstr_detect.md
- Glibc Heap uses:
- Introduction to heap utilization: pwn/linux/glibc-heap/introduction.md
- Heap overview: pwn/linux/glibc-heap/heap_overview.md
- Heap related data structure: pwn/linux/glibc-heap/heap_structure.md
- In-depth understanding of Ptmalloc2:
            - 概述: pwn/linux/glibc-heap/implementation/overview.md

- Basic functions in the heap: pwn/linux/glibc-heap/implementation/basic.md
- Heap initialization: pwn/linux/glibc-heap/implementation/heap-init.md
- Apply heap memory: pwn/linux/glibc-heap/implementation/malloc.md
- Free heap memory: pwn/linux/glibc-heap/implementation/free.md
            - Tcache: pwn/linux/glibc-heap/implementation/tcache.md

            - malloc_state: pwn/linux/glibc-heap/implementation/malloc_state.md

            - Other: pwn/linux/glibc-heap/implementation/misc.md

- Heap overflow: pwn/linux/glibc-heap/heapoverflow_basic.md
- Off-By-One in the heap: pwn/linux/glibc-heap/off_by_one.md
        - Chunk Extend / Overlapping: pwn/linux/glibc-heap/chunk_extend_overlapping.md

        - Unlink: pwn/linux/glibc-heap/unlink.md

        - Use After Free: pwn/linux/glibc-heap/use_after_free.md

        - Fastbin Attack: pwn/linux/glibc-heap/fastbin_attack.md

        - Unsorted Bin Attack: pwn/linux/glibc-heap/unsorted_bin_attack.md

        - Large Bin Attack: pwn/linux/glibc-heap/large_bin_attack.md

        - Tcache Attack: pwn/linux/glibc-heap/tcache_attack.md

        - House Of Einherjar: pwn/linux/glibc-heap/house_of_einherjar.md

        - House Of Force: pwn/linux/glibc-heap/house_of_force.md

        - House of Lore: pwn/linux/glibc-heap/house_of_lore.md

        - House of Orange: pwn/linux/glibc-heap/house_of_orange.md

        - House of Rabbit: pwn/linux/glibc-heap/house_of_rabbit.md

        - House of Roman: pwn/linux/glibc-heap/house_of_roman.md

- IO_FILE uses:
- FILE file structure description: pwn/linux/io_file/introduction.md
- Forged vtable hijacker process: pwn/linux/io_file/fake-vtable-exploit.md
- FSOP: pwn / linux / io_file / fsop.md
- Use of IO_FILE under glibc 2.24: pwn/linux/io_file/exploit-in-libc2.24.md
- Conditional competition:
- Conditional competition introduction: pwn/linux/race-condition/introduction.md
- Example: pwn/linux/race-condition/problem.md
- Integer overflow:
- Introduction to the principle of integer overflow: pwn/linux/integeroverflow/intof.md
- Sandbox escape:
- Python sandbox escape: pwn/linux/sandbox/python-sandbox-escape.md
      - kernel:

- Environment setup: pwn/linux/kernel/environment.md
- Basics: pwn/linux/kernel/basic_knowledge.md
- kernel-UAF: pwn / linux / kernel / kernel_uaf.md- kernel-ROP: pwn / linux / kernel / kernel_rop.md
        - ret2usr: pwn/linux/kernel/ret2usr.md

        - bypass-smep: pwn/linux/kernel/bypass_smep.md

        - Double Fetch: pwn/linux/kernel/double-fetch.md

- arm-pwn:
- Environment setup: pwn/linux/arm/environment.md
- arm cry: pwn / linux / arm / arm_rop.md
      - Summary:

- Get address: pwn/linux/summary/get-address.md
- Control program execution flow: pwn/linux/summary/hijack-control-flow.md
        - get shell: pwn/linux/summary/get-shell.md

- Windows Pwn:
- Overview: pwn/windows/readme.md
- Stack overflow:
- Stack introduction: pwn/windows/stackoverflow/stack-introduce.md
- Stack overflow principle: pwn/windows/stackoverflow/stackoverflow-basic.md
        - shellcode-in-stack: pwn/windows/stackoverflow/shellcode-in-stack.md

  - Android:

- Android development basics: android/basic_develop/basic_develop.md
- Android operating mechanism brief:
      - 简述: android/basic_operating_mechanism/readme.md

- The operating mechanism of the Java layer in Android:
        - 简述: android/basic_operating_mechanism/java_layer/readme.md

        - Smali 介绍: android/basic_operating_mechanism/java_layer/smali/smali.md

- Dex &amp;&amp; ODEX:
          - DEX: android/basic_operating_mechanism/java_layer/dex/dex.md

          - ODEX: android/basic_operating_mechanism/java_layer/dex/odex.md

- Android Native layer introduction:
        - Android So 介绍: android/basic_operating_mechanism/native_layer/so.md

- Android reverse basic introduction:
- Brief description: android/basic_reverse/overview.md
- Android key code targeting: android/basic_reverse/android_code_location.md
- Android simple static analysis:
- Android Java layer static analysis: android/basic_reverse/static/java-example.md
- Android Native layer static analysis: android/basic_reverse/static/so-example.md
- Android static analysis hybrid example: android/basic_reverse/static/complex-example.md
- Android simple dynamic analysis:
        - 简述: android/basic_reverse/dynamic/dynamic_debug.md

- Android Dynamic Debugging So: android/basic_reverse/dynamic/ida_native_debug.md
  - ICS:

- ICS_CTF Contest: ics/ctfs.md
- ICS_CTF found: ics/discover.md
- ICS_CTF uses: ics/exploit.md
- ICS_CTF Learning Resources: ics/learn.md


# Theme

theme:

  name: 'material'

language: &#39;zh&#39;
  palette:

    primary: 'white'

    accent: 'red'

  logo:

    icon: 'school'

  feature:

    tabs: true

are:
text: &#39;Noto Without&#39;
    code: 'Source Code Pro'



# Customization

extra:

  search:

    language: 'jp'

  disqus: 'ctf-wiki'

  copyright: 'CC BY-NC-SA 4.0'



extra_javascript:

  - 'https://cdnjs.loli.net/ajax/libs/pangu/3.3.0/pangu.min.js'

  - '_static/js/extra.js'

  - 'https://cdnjs.loli.net/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML'



extra_css:

  - '_static/css/extra.css'



# Extensions

markdown_extensions:

  - admonition

  - codehilite:

      guess_lang: false

  - def_list

  - footnotes

  - meta

- toc:
      permalink: true

- pymdownx.arithmatex
- pymdownx.caret
  - pymdownx.critic

  - pymdownx.details

- pymdownx.emoji:
      emoji_generator: !!python/name:pymdownx.emoji.to_svg

  - pymdownx.inlinehilite

  - pymdownx.keys

- pymdownx.magiclink
  - pymdownx.mark

  - pymdownx.smartsymbols

- pymdownx.superfences
  - pymdownx.tasklist:

      custom_checkbox: true

- pymdownx
